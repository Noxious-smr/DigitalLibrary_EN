<Application x:Class="UI_Layer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UI_Layer" 
             xmlns:views="clr-namespace:UI_Layer.Views"
             xmlns:viewModels="clr-namespace:UI_Layer.ViewModels"
             >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
                        <views:HomeView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:CategoriesViewModel}">
                        <views:CategoriesView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:AddViewModel}">
                        <views:AddView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:UpdateViewModel}">
                        <views:UpdateView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
                        <views:DashboardView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:MakeBorrowViewModel}">
                        <views:MakeBorrowView/>
                    </DataTemplate>
                    <!--#region Button Double Animations -->
                    <!--Two Ways Of defining Double animation to a button-->
                    <Style TargetType="{x:Type Button}" x:Key="ViewButtons">
                        <Style.Triggers>
                            <!--<EventTrigger RoutedEvent="Button.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width"  Duration="0:0:0.2" To="220" />
                                            <DoubleAnimation Storyboard.TargetProperty="Height"  Duration="0:0:0.2" To="70" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>                                
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width"  Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetProperty="Height"  Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width"  Duration="0:0:0.2" To="220" />
                                            <DoubleAnimation Storyboard.TargetProperty="Height"  Duration="0:0:0.2" To="70" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width"  Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetProperty="Height"  Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!--#endregion-->
                    <!--#region Add and update Views Styles -->
                    <Style TargetType="TextBlock" x:Key="errorTextBlock">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <!--<ScaleTransform ScaleX="0" ScaleY="0"/>-->
                                <TranslateTransform X="2500" Y="0"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Visibility" Value="Visible">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             From="0"
                                                                             To="1"
                                                                             Duration="0:0:2"
                                                                             FillBehavior="HoldEnd"
                                                                             AutoReverse="False"/>
                                            <DoubleAnimation                                 
                                                                             Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                                             From="2500"
                                                                             To="0"
                                                                             Duration="0:0:0.5"
                                                                             FillBehavior="HoldEnd" 
                                                                             AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="GroupBox" x:Key="groupBoxStyle">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" Foreground="White" FontSize="16" FontWeight="Bold"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Background" Value="#aa121212"/>
                        <Setter Property="Margin" Value="2 0"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <!--#endregion-->
                </ResourceDictionary>
                <ResourceDictionary Source="/Themes/HomeButtons.xaml"/>
                <ResourceDictionary Source="/Themes/ComboBoxStyle.xaml"/>
                <ResourceDictionary Source="/Themes/ComboBoxItem.xaml"/>
                <ResourceDictionary Source="/Themes/BrowseButtons.xaml"/>
                <ResourceDictionary Source="/Themes/AddEditButtons.xaml"/>
                <ResourceDictionary Source="/Themes/DatePickerStyle.xaml"/>
                <ResourceDictionary Source="/Themes/TextBoxStyle.xaml"/>
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
